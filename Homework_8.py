# 1 .Заполнить список ста нулями, кроме первого и последнего элементов, которые должны быть равны единице;
my_list = [0] * 100
my_list[0] = my_list[-1] = 1
print(my_list)

# 2. Сформировать возрастающий список из чётных чисел (количество элементов 45);
amount_of_elements = 45
my_list_2 = list(range(2, amount_of_elements*2+1, 2))
print(my_list_2)
print(len(my_list_2))

# 3. Пользователь вводит число. Определить, содержит ли список данное число x.
# Вывести информационное сообщение содержит или не содержит ;
my_value = int(input('Введите число: '))
if my_value in my_list_2:
    print('Список содержит введенное число')
else:
    print('Список не содержит введенное число')

# 4. Найдите сумму и произведение элементов списка. Результаты вывести на экран;
my_multiplication = 1
print(sum(my_list_2))
for i in my_list_2:
    my_multiplication *= i
print(my_multiplication)

# 5. Найти наибольший элемент списка и вывести его на экран;
my_list_3 = [23, 4, 5, 17, 54, 27]
print(max(my_list_3))
# альтернатива:
# maximum = my_list_3 [0]
# for i in range(1, len(my_list_3 )):
#     if my_list_3 [i] > maximum:
#         maximum = my_list_3 [i]
# print(maximum)

# 6. Определите, есть ли в списке повторяющиеся элементы, если да, то вывести на экран это значение;
my_list_4 = [2, 3, 4, 1, 5, 4, 7, 7]
print(*set([i for index, i in enumerate(my_list_4) if i in my_list_4[index + 1:]]))
# * - убирает {} в результате
# Функция Index - это встроенный метод списка, который позволяет узнать индекс или позицию элемента
# в последовательности. Другими словами, этот метод ищет элемент в списке и возвращает его индекс.
# enumerate - это встроенная функция Python, используемая для циклического перебора с автоматической индексацией,
# сгенерированной переменной счётчиком. По умолчанию счётчик начинается с 0, но можно установить его в любое целое
# число. enumerate была добавлена в Python начиная с версии 2.3 (PEP 279). Функция enumerate на языке Python помогает
# писать больше питоновских и идиоматических циклов, которые избегают использования неумелого и подверженного ошибкам
# ручного индексирования. Чтобы использовать enumerate в полном объеме, обязательно изучите возможности итераторов
# Python и распаковки структуры данных из официальной документации.

# 7. Поменять местами самый большой и самый маленький элементы списка;
maximum_2 = max(my_list_4)
minimum = min(my_list_4)
for i in range(len(my_list_4)):
    if my_list_4[i] == maximum_2:
        my_list_4[i] = minimum
    elif my_list_4[i] == minimum:
        my_list_4[i] = maximum_2
print(my_list_4)

# 8. Дан произвольный список. Представьте его в обратном порядке.
print(my_list_4[::-1])
# print(*reversed(my_list_4)) # альтернатива
